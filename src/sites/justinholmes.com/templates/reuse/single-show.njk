{% extends 'shared/layouts/base.njk' %}
{% block main %}
{% include 'partials/bigger-banner.njk' %}

<style>

    #donationModal {
        /*display: flex;*/
        /*flex-direction: column;*/
        /*align-items: center;*/
        /*width: 50%;*/
        /*min-width: 450px;*/
        background: rgba(255, 255, 255, 0.7);
        border: 2px solid #6c63ff;
        border-radius: 15px;
        box-shadow: 0 10px 16px rgba(0, 0, 0, 0.7);
        padding: 20px;
    }


    .input-group {
        display: flex;
        width: 100%;
        align-items: center;
    }

    #amount {
        flex: 1;
        padding: 10px;
        border-radius: 10px 0 0 10px;
        border: 1px solid #ccc;
    }

    .input-group-addon {
        background-color: #6c63ff;
        color: white;
        padding: 10px 20px;
        border-radius: 0 10px 10px 0;
    }

</style>


<div id="cryptograss-content" class="container mb-5 semi-transparent-bg p-4">
    <div id="shapeRenderingArea" style="display: flex; flex-direction: row; flex-wrap: wrap;"></div>

    {% include "partials/single-show-overview.njk" %}

    <div id="setlist" class="mt-5">
        {% for set_number, set in show.sets %}
            <div class="row">
                <div class="col-md-8 single-set-list">
                    {% if show.sets |length > 1 %}
                        <h3><span class="pixel-font" style="color: #00ff00; font-size: 1.3em;">Set #{{loop.index}}</span>
                        </h3>
                    {% endif %}

                    <ul>
                        {% for songPlay in set.songplays %}
                            <li><span class="pixel-font {{songPlay.provenance}} songPlay">
                                {% if songPlay.mode=="reprise" %}
                                    <span style="color:#fff7ae"><b>⇚</b></span>
                                {% endif %}
                                {% if songPlay.mode=="scratch" %}<s>{% endif %}
                                <a href="{{songPlay._song.resource_url}}">{{songPlay._song.title}}</a>
                                {% if songPlay.mode=="scratch" %}</s> ({{songPlay.scratch_reason}}){% endif %}

                                {% if songPlay.provenance=="traditional" %}
                                    <span class="traditional-detail">(Traditional)</span>
                                {% endif %}
                                {% if songPlay.provenance=="cover" %}
                                    <span class="cover-detail">({{songPlay._song.by_artist}} cover)</span>
                                {% endif %}
                                {% if songPlay.provenance=="video_game" %}
                                    <span class="video-game-detail">(from {{songPlay._song.video_game}})</span>
                                {% endif %}
                                {% if songPlay.detail %}
                                    <span>{{songPlay.detail}}</span>
                                {% endif %}
                                {% if songPlay.mode=="segue" %}
                                    <span style="color:#fff7ae"><b>⇛</b></span>
                                {% endif %}</span>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
                <div class="col-md-4">
                    <img class="img-fluid" src="{{show.artist_id | resolveGraph(show.blockheight, set_number)}}">
                </div>
            </div>
            {% if show.has_set_stones_available %}
                <div class="row">
                    <div class="set-stones">
                        <h3><span class="pixel-font" style="text-shadow: 2px 2px 4px rgba(0,0,0,0.5);">Set Stones</span>
                        </h3>
                        <table class="px-3">
                            <thead class="border-bottom border-black">
                            <tr>
                                <th class="text-center">Owner</th>
                                <th class="text-center">Paid (ETH)</th>
                                <th class="text-center">Set Stone</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for stone in set.setstones %}
                                <tr class="border-bottom border-black">
                                    <td class="px-3" data-tippy-content="{{stone.owner}}"><a
                                            href="https://etherscan.io/address/{{stone.owner}}"
                                            target="_blank">{{stone.owner | truncate(12)}}</a></td>
                                    <td class="px-3">{{stone.paidAmountEth}}</td>
                                    <td class="px-3"><a href="{{getCryptograssUrl()}}/assets/images/setstones/{{stone.tokenId}}.png"
                                                        target="_blank"><img
                                            src="{{getCryptograssUrl()}}/assets/images/setstones/{{stone.tokenId}}.png"
                                            style="width: 50px;"></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            {% endif %}
        {% else %}
                    <div class="alert alert-info" role="alert">
                <p class="mb-0 pixel-font">The setlist for this show has not been committed yet. Check back later to see
                    the setlist and mint your Set Stone!</p>
            </div>
        {% endfor %}
    </div>
    {% if show.has_set_stones_available %}
        <div id="donationModalContainer" class="mt-5 row">
            <div class="col-3"></div>
            <div id="donationModal" class="col-md-6">
                <span class="pixel-font" style="color: black;"><h2>Strike set stone for this show</h2></span>
                <p class="text-black">Select three colors from the original NES palette.</p>
                <div id="setStoneColorPicker" style="width: 100%; align-items: left; color: black;">
                    <select id="colorDropdown1" class="form-select pixel-font"></select>
                    <select id="colorDropdown2" class="form-select pixel-font"></select>
                    <select id="colorDropdown3" class="form-select pixel-font"></select>
                    <button id="randomizeColors" class="btn btn-primary mt-2 pixel-font"
                            onclick="randomizeColors()">
                        Randomize
                    </button>
                </div>

                <div id="stoneRenderArea"></div>

                <div id="crystalizationMessage">
                    <h4 class="pixel-font" style="color: black;">Crystalization message:</h4>
                    <input id="crystalizationMessageText" type="text" class="form-control"
                           placeholder="Enter personal message">
                </div>

                <select id="setPicker" class="form-select pixel-font mt-2">
                    {% for set_number, set in show.sets %}
                        <option value="{{set_number}}">Set #{{loop.index}}</option>
                    {% endfor %}
                </select>

                <h4 data-tippy-content="Select a song from the setlist to make it your favorite song for this set stone."
                    class="pixel-font mt-2" style="color: black;">Song of Note:</h3>
                    <select id="favoriteSongPicker" class="form-select pixel-font mt-2">
                    </select>

                    <h4 class="pixel-font text-black"><span>Minimum price:</span>
                        <span id="stonePrice"></span>
                    </h4>
                    <div class="input-group mt-2" style="width: 100%">
                        <input id="amount">
                        <span class="input-group-addon">ETH</span>
                    </div>

                    <h3 class="pixel-font text-black">Rabbit</h3>
                    <p class="text-black">You need a secret "rabbit", distributed at the show in the hat that we pass
                        around, to buy a set stone. Each rabbit is valid to purchase one stone.</p>
                    <input id="rabbit" type="text"/>
                    <button id="verifyRabbit" class="btn btn-primary">Verify</button>

                    <div id="rabbitHashIconContainer" style="display: flex; flex-direction: row; align-items: center;">
                        <div id="rabbitHashIcon"></div>
                        <span id="rabbithash"></span>
                    </div>

                    <p id="verifyResult" class="text-light"></p>
                    <p id="invalidRabbitErrorMessage" style="display: none; color: red;">Invalid secret rabbit</p>


                    <div class="mt-5" style="display: flex; justify-content: space-between; width: 100%">
                        <button id="mintStone" class="btn btn-primary pixel-font"
                                style="padding: 10px; background-color: hsl(345, 100%, 51%); border-color: hsl(345, 100%, 51%);"
                                onclick="mintStone()">Strike SetStone
                        </button>
                        <w3m-button></w3m-button>
                    </div>

            </div>
        </div>
    {% endif %}

    <div id="vowelSoundContributions" class="mt-5"
         style="display: flex; flex-direction: row; flex-wrap: wrap; justify-content: center; width: 100%;">
    </div>


</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="not-enough-eth-toast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" style="color: black;">
            That's below the minimum price.
        </div>
    </div>
</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="connect-wallet-toast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" style="color: black;">
            Please connect your wallet.
        </div>
    </div>
</div>

<script type="text/javascript">

    // take the valid hashes out from the rabbit_hashes array
    // and put them into a new array
    const valid_rabbit_hashes = [
        {% for rabbit_hash in show.rabbit_hashes %}
            "{{rabbit_hash}}",
        {% endfor %}
    ]

    const stone_price_wei = {{show.stone_price}}
    const artist_id = {{show.artist_id}}
    const blockheight = {{show.blockheight}}

    const setSongs = [
        {% for set_number, set in show.sets %}
            [{% for songPlay in set.songplays %}
                "{{songPlay._song.title}}",
            {% endfor %}],
        {% endfor %}
    ]

    const vowelSoundContributions = [
        {% for this in chainData.vowelSoundContributions %}
            {
                amount: "{{this.amountEth}}",
                address: "{{this.address}}",
                rank: {{this.rank}},
                ensName: "{{this.ensName}}"
            },
        {% endfor %}
    ]

        {% if show.has_set_stones_available %}
        window.this_show_has_set_stones = true;
{% else %}
        window.this_show_has_set_stones = false;
{% endif %}

</script>
{% endblock %}